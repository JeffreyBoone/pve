[{"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\index.js":"1","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\App.js":"2","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\reportWebVitals.js":"3","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\Card.js":"4","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\ConfirmDialog.jsx":"5","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\Dustbin.jsx":"6","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\Filter.js":"7","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\User.js":"8","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\AddPve.jsx":"9"},{"size":517,"mtime":1612880583562,"results":"10","hashOfConfig":"11"},{"size":12043,"mtime":1613680545305,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":9690,"mtime":1613662840460,"results":"14","hashOfConfig":"11"},{"size":2450,"mtime":1613677089857,"results":"15","hashOfConfig":"11"},{"size":861,"mtime":1613647795245,"results":"16","hashOfConfig":"11"},{"size":3964,"mtime":1613647797716,"results":"17","hashOfConfig":"11"},{"size":4275,"mtime":1613652886122,"results":"18","hashOfConfig":"11"},{"size":3855,"mtime":1613680545278,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1rykxw6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\index.js",[],["42","43"],"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\App.js",["44","45","46","47","48","49","50","51"],"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\reportWebVitals.js",[],"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\Card.js",["52"],"import React, { useCallback } from 'react'\r\nimport { withStyles, fade, makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { grey, blueGrey } from '@material-ui/core/colors';\r\nimport { useDrag } from 'react-dnd';\r\nimport ConfirmationDialogRaw from './ConfirmDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: 2\r\n  },\r\n  actions: {\r\n    backgroundColor: blueGrey[100]\r\n  },\r\n  table: {\r\n    backgroundColor: grey[200]\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  card: {\r\n    margin: 5,\r\n  },\r\n  tableHead: {\r\n    fontWeight: 'bold'\r\n  },\r\n  paper: {\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  test: {\r\n    width: \"0\",\r\n    backgroundColor: \"black\"\r\n  },\r\n  topAppBar: {\r\n    backgroundColor: \"#177F76\"\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n    backgroundColor: \"#177F76\"\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#004D44\",\r\n  },\r\n  header: {\r\n    backgroundColor: \"#177F76\"\r\n  }\r\n}));\r\n\r\nconst style = {\r\n  border: '1px dashed gray',\r\n  backgroundColor: 'white',\r\n  cursor: 'move',\r\n  width: \"100%\",\r\n};\r\n\r\n\r\nexport default function CardWidget(props) {\r\n  //\r\n  var namesList = [\r\n    { name: \"Projectnaam\", id: props.projectnaam },\r\n    { name: \"Projectnummer\", id: props.projectnummer },\r\n    { name: \"Type\", id: props.type },\r\n    { name: \"Publicatie\", id: props.publicatie }\r\n  ];\r\n\r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      color: green[500],\r\n      '&:hover': {\r\n        color: green[700],\r\n      },\r\n    },\r\n  }))(Button);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [list, setList] = React.useState(namesList);\r\n\r\n  const handleClose = (newValue) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRemove = useCallback(name => {\r\n    setList(list.filter(item => item.name !== name));\r\n    console.log(name)\r\n  });\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const Box = ({ name, value }) => {\r\n    const [{ isDragging }, drag] = useDrag({\r\n      item: { name, type: \"item\" },\r\n      end: (item, monitor) => {\r\n        const dropResult = monitor.getDropResult();\r\n        if (item && dropResult) {\r\n          setOpen(true)\r\n        }\r\n      },\r\n      collect: (monitor) => ({\r\n        isDragging: monitor.isDragging(),\r\n      }),\r\n    });\r\n    const opacity = isDragging ? 0.4 : 1;\r\n\r\n    return (\r\n      <TableRow ref={drag} style={{ ...style, opacity }} key={props.publicatie} >\r\n        <TableCell component=\"th\" scope=\"row\">{name}</TableCell>\r\n        <TableCell align=\"right\">{value}</TableCell>\r\n        <ConfirmationDialogRaw\r\n          classes={{\r\n            paper: classes.paper,\r\n          }}\r\n          id=\"ringtone-menu\"\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          test={() => handleRemove(name)} />\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <React.Fragment key={props.id}>\r\n        <Card className={classes.card}>\r\n          <CardHeader className={classes.header}\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                {(props.status === \"In Bewerking\") && <div id=\"myDiv\">\r\n                  <LockOpenOutlinedIcon />\r\n                </div>\r\n                }\r\n                {(props.status === \"Vastgesteld\") && <div id=\"myDiv\">\r\n                  <LockIcon />\r\n                </div>\r\n                }\r\n              </Avatar>\r\n            }\r\n            action={\r\n              <IconButton aria-label=\"settings\">\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            }\r\n            title={props.owner}\r\n            subheader={props.date}\r\n          />\r\n          <TableContainer>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={classes.tableHead}>{props.header}</TableCell>\r\n                  <TableCell className={classes.tableHead} align=\"right\">{props.subheader}</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                  {list.map(list => {\r\n                    return (\r\n                      <Box name={list.name} value={list.id} deleter={handleRemove} />\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <CardActions disableSpacing className={classes.actions}>\r\n            <Hidden smUp> {/* open in browser only visible when below sm */}\r\n              <Button className={classes.button} variant=\"contained\" color=\"primary\" aria-label=\"open in browser\">\r\n                <OpenInBrowserIcon />\r\n              </Button>\r\n            </Hidden>\r\n            <IconButton className={classes.button} aria-label=\"share\">\r\n              <DeleteForeverIcon />\r\n            </IconButton>\r\n            <Button className={classes.button} variant=\"outlined\" color=\"secondary\" aria-label=\"PersonAddDisabledIcon\">\r\n              <PersonAddDisabledIcon />\r\n            </Button>\r\n            <ColorButton className={classes.button} variant=\"outlined\" color=\"primary\" aria-label=\"PersonAddDisabledIcon\">\r\n              <PersonAddIcon />\r\n            </ColorButton>\r\n            <IconButton\r\n              className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n              })}\r\n              onClick={handleExpandClick}\r\n              aria-expanded={expanded}\r\n              aria-label=\"show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </IconButton>\r\n          </CardActions>\r\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <TableContainer>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell className={classes.tableHead}>Hier</TableCell>\r\n                    <TableCell className={classes.tableHead} align=\"right\">Komt</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow key={props.projectnaam}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      Extra\r\n                            </TableCell>\r\n                    <TableCell align=\"right\">Info</TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Collapse>\r\n        </Card>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\ConfirmDialog.jsx",[],"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\Dustbin.jsx",["53"],"import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst style = {\r\n    margin: 0,\r\n    top: 'auto',\r\n    right: 20,\r\n    bottom: 90,\r\n    left: 'auto',\r\n    position: 'fixed',\r\n    display: \"\"\r\n};\r\nexport const Dustbin = () => {\r\n    const [{ canDrop, isOver }, drop] = useDrop({\r\n        accept: \"item\",\r\n        drop: () => ({ name: 'the Dustbin' }),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n    const isActive = canDrop && isOver;\r\n\r\n    return (\r\n        <Fab ref={drop} style={style} size='large' variant='extended' color=\"primary\" aria-label=\"add\">\r\n            Drag here to delete &nbsp;\r\n            <DeleteIcon />\r\n        </Fab>\r\n    );\r\n};\r\n","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\Filter.js",[],"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\User.js",[],"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\AddPve.jsx",["54","55","56","57","58","59","60"],"import React from 'react'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport PropTypes from 'prop-types';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nexport default function AddPveDialogRaw(props) {\r\n    const { onClose, value: valueProp, test, open, ...other } = props;\r\n    const [value, setValue] = React.useState(valueProp);\r\n    const radioGroupRef = React.useRef(null);\r\n    const [state, setState] = React.useState({\r\n      open1: false,\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    });\r\n  \r\n    const { vertical, horizontal, open1 } = state;\r\n  \r\n    React.useEffect(() => {\r\n      if (!open) {\r\n        setValue(valueProp);\r\n      }\r\n    }, [valueProp, open]);\r\n  \r\n    const handleEntering = () => {\r\n      if (radioGroupRef.current != null) {\r\n        radioGroupRef.current.focus();\r\n      }\r\n    };\r\n  \r\n    const handleCancel = () => {\r\n      onClose();\r\n    };\r\n  \r\n    const handleOk = () => {\r\n      onClose(value);\r\n      test()\r\n      handleClick({ vertical: 'top', horizontal: 'center' });\r\n    };\r\n  \r\n    const handleClick = (newState) => () => {\r\n      setState({ open1: true, ...newState });\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setState({ ...state, open1: false });\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n      };\r\n    \r\n  \r\n    return (\r\n     <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">PvE Toevoegen</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Hier komt veel meer te staan is nu alleen als ontwerp bedoelt. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis arcu est, sollicitudin sit amet odio eu, consequat auctor nulla. Sed et fermentum nisi, vitae cursus felis.</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Projectnaam\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Projectnummer\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n          <FormControl component=\"fieldset\" style={({ marginTop: '0.8rem' })}>\r\n            <FormLabel component=\"legend\">Type</FormLabel>\r\n            <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\r\n              <FormControlLabel value=\"beheer\" control={<Radio color=\"primary\" />} label=\"Beheer\" />\r\n              <FormControlLabel value=\"onderhoud\" control={<Radio color=\"primary\" />} label=\"Onderhoud\" />\r\n              <FormControlLabel value=\"nieuwbouw\" control={<Radio color=\"primary\" />} label=\"Nieuwbouw\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n    </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Add\r\n    </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n  \r\n  AddPveDialogRaw.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n  };",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":30,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"69","line":1,"column":38,"nodeType":"67","messageId":"68","endLine":1,"endColumn":47},{"ruleId":"65","severity":1,"message":"70","line":1,"column":49,"nodeType":"67","messageId":"68","endLine":1,"endColumn":57},{"ruleId":"71","severity":1,"message":"72","line":79,"column":3,"nodeType":"73","messageId":"74","endLine":79,"endColumn":10},{"ruleId":"65","severity":1,"message":"75","line":152,"column":7,"nodeType":"67","messageId":"68","endLine":152,"endColumn":12},{"ruleId":"76","severity":1,"message":"77","line":174,"column":31,"nodeType":"67","endLine":174,"endColumn":42},{"ruleId":"78","severity":1,"message":"79","line":188,"column":47,"nodeType":"80","messageId":"74","endLine":188,"endColumn":49},{"ruleId":"78","severity":1,"message":"79","line":274,"column":52,"nodeType":"80","messageId":"74","endLine":274,"endColumn":54},{"ruleId":"76","severity":1,"message":"77","line":188,"column":24,"nodeType":"67","endLine":188,"endColumn":35},{"ruleId":"65","severity":1,"message":"81","line":24,"column":11,"nodeType":"67","messageId":"68","endLine":24,"endColumn":19},{"ruleId":"65","severity":1,"message":"82","line":17,"column":55,"nodeType":"67","messageId":"68","endLine":17,"endColumn":60},{"ruleId":"65","severity":1,"message":"83","line":26,"column":13,"nodeType":"67","messageId":"68","endLine":26,"endColumn":21},{"ruleId":"65","severity":1,"message":"84","line":26,"column":23,"nodeType":"67","messageId":"68","endLine":26,"endColumn":33},{"ruleId":"65","severity":1,"message":"85","line":26,"column":35,"nodeType":"67","messageId":"68","endLine":26,"endColumn":40},{"ruleId":"65","severity":1,"message":"86","line":34,"column":11,"nodeType":"67","messageId":"68","endLine":34,"endColumn":25},{"ruleId":"65","severity":1,"message":"87","line":44,"column":11,"nodeType":"67","messageId":"68","endLine":44,"endColumn":19},{"ruleId":"65","severity":1,"message":"88","line":58,"column":11,"nodeType":"67","messageId":"68","endLine":58,"endColumn":23},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","no-dupe-keys","Duplicate key 'toolbar'.","ObjectExpression","unexpected","'style' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'isActive' is assigned a value but never used.","'other' is assigned a value but never used.","'vertical' is assigned a value but never used.","'horizontal' is assigned a value but never used.","'open1' is assigned a value but never used.","'handleEntering' is assigned a value but never used.","'handleOk' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]