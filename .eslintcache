[{"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\index.js":"1","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\App.js":"2","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\reportWebVitals.js":"3","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\Card.js":"4","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\ConfirmDialog.jsx":"5","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\Dustbin.jsx":"6","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\Filter.js":"7","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\User.js":"8"},{"size":517,"mtime":1612880583562,"results":"9","hashOfConfig":"10"},{"size":11783,"mtime":1613652806576,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":9684,"mtime":1613661254530,"results":"13","hashOfConfig":"10"},{"size":2450,"mtime":1613652873019,"results":"14","hashOfConfig":"10"},{"size":861,"mtime":1613647795245,"results":"15","hashOfConfig":"10"},{"size":3964,"mtime":1613647797716,"results":"16","hashOfConfig":"10"},{"size":4275,"mtime":1613652886122,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1rykxw6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\index.js",[],["37","38"],"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\App.js",["39","40","41","42","43","44","45","46","47","48"],"import React, { useCallback, useRef, useEffect, useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { fade, makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport CardWidget from './components/Card';\r\nimport Filter from './components/Filter';\r\nimport User from './components/User';\r\nimport { Dustbin } from './components/Dustbin';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport messages from './data.json';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  topAppBar: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    backgroundColor: \"#177F76\"\r\n\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    top: 'auto',\r\n    bottom: 0,\r\n    backgroundColor: \"#177F76\"\r\n  },\r\n  add: {\r\n    flex: 1,\r\n    display: \"flex\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n\r\n  toolbar: {\r\n    height: 63\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n  },\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingBottom: 50,\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  margin: 0,\r\n  top: 'auto',\r\n  right: 20,\r\n  bottom: 90,\r\n  left: 'auto',\r\n  position: 'fixed',\r\n};\r\n\r\nexport default function App(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const options = [\r\n    \"In Bewerking\",\r\n    \"Vastgesteld\",\r\n  ];\r\n\r\n  const handleMenuItemClick = useCallback(index => {\r\n    setSelectedIndex(index);\r\n  });\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChange = () => { (selectedIndex == 0) ? setSelectedIndex(1) : setSelectedIndex(0) };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const Cards = () => {\r\n    return <div>\r\n      <Grid container>\r\n        {messages.filter(message => message.status === options[selectedIndex]).map(({ id, locked, projectnaam, projectnummer, type, header, subheader, date, publicatie, owner, status }) => (\r\n          <Grid item xs={12} sm={6} md={4} lg={3} xl={2} >\r\n            <CardWidget id={id} locked={locked} projectnaam={projectnaam} projectnummer={projectnummer} type={type} header={header} subheader={subheader} date={date} owner={owner} publicatie={publicatie} status={status} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>;\r\n  };\r\n\r\n  const AntSwitch = withStyles((theme) => ({\r\n    root: {\r\n      width: 28,\r\n      height: 16,\r\n      padding: 0,\r\n      display: 'flex',\r\n    },\r\n    switchBase: {\r\n      padding: 2,\r\n      color: theme.palette.grey[500],\r\n      '&$checked': {\r\n        transform: 'translateX(12px)',\r\n        color: theme.palette.common.white,\r\n        '& + $track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.primary.main,\r\n          borderColor: theme.palette.primary.main,\r\n        },\r\n      },\r\n    },\r\n    thumb: {\r\n      width: 12,\r\n      height: 12,\r\n      boxShadow: 'none',\r\n    },\r\n    track: {\r\n      border: `1px solid ${theme.palette.grey[500]}`,\r\n      borderRadius: 16 / 2,\r\n      opacity: 1,\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n    checked: {},\r\n  }))(Switch);\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar}>\r\n        <CardHeader className={classes.header}\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar} />\r\n          }\r\n          action={\r\n            <User />\r\n          }\r\n          title=\"Jeffrey Boone\"\r\n          subheader=\"Stagaire\"\r\n        />\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        <ListItem style={{ flexDirection: 'row', justifyContent: 'center' }}>\r\n          <Button variant=\"contained\" color=\"secondary\" fullWidth=\"false\" onClick={handleClickOpen}>\r\n            Add PvE\r\n        </Button>\r\n        </ListItem>\r\n        <ListItem style={{ flexDirection: 'row', justifyContent: 'center' }}>\r\n          <Typography component=\"div\">\r\n            <Grid component=\"label\" container alignItems=\"center\" spacing={2}>\r\n              <LockIcon />\r\n              <Grid item>\r\n                <AntSwitch checked={(selectedIndex == 0) && true} onChange={handleChange} name=\"checkedC\" />\r\n              </Grid>\r\n              <LockOpenOutlinedIcon />\r\n            </Grid>\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"Test\", \"Values\", \"Only\", \"for\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"Demo\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.topAppBar}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <img src=\"dali-bright.png\" alt=\"Italian Trulli\" width=\"30\" />\r\n          </IconButton>\r\n          <div className={classes.add}>\r\n            <Typography variant=\"h6\">\r\n              Pve\r\n          </Typography>\r\n            <Hidden smDown>\r\n              <Typography variant=\"h6\" className={classes.add}>\r\n                &nbsp;-&nbsp;Actueel overzicht\r\n          </Typography></Hidden></div>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Hidden mdUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden smDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <DndProvider backend={HTML5Backend}>\r\n          <div className={classes.toolbar} />\r\n          <Paper square className={classes.paper}>\r\n            <Hidden smUp>\r\n              <Filter handleMenuItemClick={handleMenuItemClick} selectedIndex={selectedIndex} options={options} />\r\n            </Hidden>\r\n            <List className={classes.list}>\r\n              <Cards />\r\n            </List>\r\n          </Paper>\r\n\r\n          <Hidden smDown>\r\n            <Dustbin />\r\n          </Hidden>\r\n\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <Hidden mdUp>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerToggle}>\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton} onClick={handleClickOpen}>\r\n                  <AddIcon />\r\n                </Fab>\r\n              </Hidden>\r\n              <div className={classes.grow} />\r\n              <IconButton edge=\"end\" color=\"inherit\">\r\n                <MoreIcon />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </DndProvider>\r\n      </main>\r\n    </div>\r\n  );\r\n}","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\reportWebVitals.js",[],"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\Card.js",["49"],"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\ConfirmDialog.jsx",[],"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\Dustbin.jsx",["50"],"import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst style = {\r\n    margin: 0,\r\n    top: 'auto',\r\n    right: 20,\r\n    bottom: 90,\r\n    left: 'auto',\r\n    position: 'fixed',\r\n    display: \"\"\r\n};\r\nexport const Dustbin = () => {\r\n    const [{ canDrop, isOver }, drop] = useDrop({\r\n        accept: \"item\",\r\n        drop: () => ({ name: 'the Dustbin' }),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n    const isActive = canDrop && isOver;\r\n\r\n    return (\r\n        <Fab ref={drop} style={style} size='large' variant='extended' color=\"primary\" aria-label=\"add\">\r\n            Drag here to delete &nbsp;\r\n            <DeleteIcon />\r\n        </Fab>\r\n    );\r\n};\r\n","C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\Filter.js",[],"C:\\Users\\jeffr\\OneDrive\\Documenten\\GitHub\\pve\\src\\components\\User.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":30,"nodeType":"57","messageId":"58","endLine":1,"endColumn":36},{"ruleId":"55","severity":1,"message":"59","line":1,"column":38,"nodeType":"57","messageId":"58","endLine":1,"endColumn":47},{"ruleId":"55","severity":1,"message":"60","line":1,"column":49,"nodeType":"57","messageId":"58","endLine":1,"endColumn":57},{"ruleId":"61","severity":1,"message":"62","line":78,"column":3,"nodeType":"63","messageId":"64","endLine":78,"endColumn":10},{"ruleId":"55","severity":1,"message":"65","line":151,"column":7,"nodeType":"57","messageId":"58","endLine":151,"endColumn":12},{"ruleId":"55","severity":1,"message":"66","line":164,"column":10,"nodeType":"57","messageId":"58","endLine":164,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":173,"column":31,"nodeType":"57","endLine":173,"endColumn":42},{"ruleId":"69","severity":1,"message":"70","line":187,"column":47,"nodeType":"71","messageId":"64","endLine":187,"endColumn":49},{"ruleId":"55","severity":1,"message":"72","line":189,"column":9,"nodeType":"57","messageId":"58","endLine":189,"endColumn":20},{"ruleId":"69","severity":1,"message":"70","line":265,"column":52,"nodeType":"71","messageId":"64","endLine":265,"endColumn":54},{"ruleId":"67","severity":1,"message":"68","line":187,"column":24,"nodeType":"57","endLine":187,"endColumn":35},{"ruleId":"55","severity":1,"message":"73","line":24,"column":11,"nodeType":"57","messageId":"58","endLine":24,"endColumn":19},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","no-dupe-keys","Duplicate key 'toolbar'.","ObjectExpression","unexpected","'style' is assigned a value but never used.","'open' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'handleClose' is assigned a value but never used.","'isActive' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]